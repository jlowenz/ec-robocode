parent.0 = rc.params

# When eval.masterproblem is turned on, the system assumes
# use of the master/slave evaluator.
eval.masterproblem = ec.eval.MasterProblem

# Turning this on will provide synchronization
# information for debugging the master/slave evaluator
eval.masterproblem.debug-info = true

# How many jobs do you hand to a slave in bulk?
# A small number allows finer resolution of job distribution
# among the slaves, but may result in jobs being sent out
# in individual packets on the network (quite inefficient).
# If you have N slaves and need to distribute M jobs total
# (perhaps you have a population of size M?), then your
# max-jobs-per-slave should be no more than, and ideally a
# small fraction of, M/N.
eval.masterproblem.max-jobs-per-slave = 5

# This compresses the streams between the master and slaves.
# Compression is probably helpful
eval.compression = true

# This defines the socket port that the master listens in
# for incomoing Slaves to connect.
eval.master.port = 15777

# Change this to force whole Individuals to be returned by the
# Slave rather than just returning Fitnesses, plus whether or not the
# Individual was evaluated.  Returning a whole Individual is expensive
# over the network and should only be done if, for some reason, your
# Problem class modified the Individuals as it evaluates them.
eval.return-inds = false