Run #4

Fitness change - reduce magnitude of scan efficiency by clamping the minimum revolutions to 1 (instead of 0.0001).
Ok never mind. We shall do this: record the total time steps of a battle, and make ratio of scans to total steps. If they were
perfectly efficient, then the value would be 1. This allows us to scale freely.


// from what? endogenous????
gp_395_11257 - beat ramfire (small margin)


Run #5
+ add the mySpeed node, currentvector (back in) and goingforward
+ modified fitness to give bonus on shorter battles
- terrible performance

in general, been seeing a ridiculous amount of similar behavior, behavior convergence?

Run #6
+ remove battle length
- run with slightly more mutation? (0.8 crossover, 0.1 mutation -- wait for run 7!)
- remove random seeding? (next run?)
+ add a small bonus for survival?

Run #7 (experimentation)
+ add movement penalty
+ add bullet penalty
+ adjust alpha/beta
+ change crossover/mutation rate (90%,10%)
+ raise survival bonus
+ adjust bonus for efficiency by full circle scan (not completely correct)


Run #8
+ remove random generation
+ raise pop size by 1
+ reduce elitism count to 1
+ add random member creation and cull lowest 2 forests
+ reduce mutation rate back to 5%
+ keep crossover at 90%

Run #9
+ jason's function
+ raise pop size to 80
+ raise cross/mut 95%/10%
+ 60 gens

Run #10
+ scan function

Run #11
+ using new fitness
+ values back to 600,95,5,1 elite,1 cull,no random

Run #12
+ random gens