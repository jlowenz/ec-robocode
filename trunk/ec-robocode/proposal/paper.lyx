#LyX 1.4.3 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\begin_preamble
\author{Ronald Bowers \& Jason Owens}
\title{Coevolution of Human-Competitive Robocode Tanks Using Genetic Programming with Exogenous Fitness}
\end_preamble
\language english
\inputencoding auto
\fontscheme ae
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes true
\output_changes true
\author "Jason L Owens" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
maketitle
\end_layout

\end_inset


\end_layout

\begin_layout Section
Background
\end_layout

\begin_layout Section
Abstract
\end_layout

\begin_layout Section
Introduction 
\end_layout

\begin_layout Standard
Coevolution appears to be a useful way of evolving game-playing agents.
 Historically, not often successful in games where there is a cost to taking
 action, or risk One issue that has consistently hindered the use of coevolution
 in the development of combat game playing agents is that of the "mediocre
 steady-state" [Ben-Gurion Guys], [Pollack], [Sheppard].
 The "mediocre steady state" is a state where the population consists of
 members who do absolutely nothing.
 This phenemonen occurs because the...
\end_layout

\begin_layout Standard
As was pointed out in [W/S], this phenomenon has been documented to occur
 in real life - wwi story [are we gonna look up the reference for this?].
 Interestingly, no such corollary could be found in WWII.
 A reasonable theory as to why this might be the case is that the nature
 of the conflicts, and thus the motivations of the soldiers who fought in
 them were different.
 In WWI, the war was an outgrowth of issues within the European aristocracy.
 The common soldier saw no great need to win the war, nor did they have
 any great fear of losing.
 Survival was their primary concern.
 On the other hand, WWII presented the Allied soldier with a 
\end_layout

\begin_layout Section
Hypothesis
\end_layout

\begin_layout Standard
We hypothesize that using GP and coevolution, and by applying an exogenous
 fitness function based on victories, we can evolve Robocode players that
 can compete successfully against the best human-designed robots.
 So, the exogenous[?]
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Standard
GP of game-players 
\end_layout

\begin_layout Standard
Coevolution of game-players 
\end_layout

\begin_layout Standard
Mediocre steady-state.
 
\end_layout

\begin_layout Standard
Exogenous fitness as a motivator - overcoming the mediocre steady state.
 
\end_layout

\begin_layout Standard
"Arms Race" 
\end_layout

\begin_layout Standard
Previous robocode research 
\end_layout

\begin_layout Section
Approach
\end_layout

\begin_layout Standard
Ignoring the warnings of others, we plan to carry through and explore the
 experiment using genetic programming and coevolution in this rather 
\begin_inset Quotes eld
\end_inset

open-ended
\begin_inset Quotes erd
\end_inset

 domain.
 
\change_inserted 0 1161318769
Previous research in evolving Robocode agents reported failure when pursuing
 a coevolutionary model, and thus they resorted to training against known
 quantities 
\begin_inset LatexCommand \cite{Eisenstein:2003wd,Shichel:2005eu}

\end_inset

.
 However, in doing this, the danger of evolving specialized players unable
 to handle generalized situations (i.e.
 new players with different tactics) is increased; in fact, [one of them
 mentions this].
 From our point of view, coevolution is obviously more exciting; we believe
 that the lack of an appropriate exogenous fitness function is the primary
 reason the previous ventures failed during coevolution.
 As 
\begin_inset LatexCommand \cite{ficici98challenges}

\end_inset

 states: 
\begin_inset Quotes eld
\end_inset

[t]he key to successful coevolutionary learning is a competitive arms race
 between opposed participants.
 Competitors must be well-matched in skill to force each other to improve.
\begin_inset Quotes erd
\end_inset

 We would like to add that competitors must also be sufficiently 
\emph on
motivated
\emph default
 in order to avoid the mediocre stable-states common to coevolution 
\begin_inset LatexCommand \cite{angeline93competitive,ficici98challenges,waters1999gpa}

\end_inset

.
\end_layout

\begin_layout Standard

\change_inserted 0 1161318769
Our implementation of coevolution follows that of the model described in
 
\begin_inset LatexCommand \cite{Luke:2002fk}

\end_inset

: one-population coevolution, where single individuals within that population
 are paired up and pitted against every other individual to obtain an overall
 fitness value.
\change_deleted 0 1161319187

\end_layout

\begin_layout Standard

\change_deleted 0 1161319187
As discussed in 
\begin_inset LatexCommand \cite{Luke:2002fk}

\end_inset


\change_unchanged

\end_layout

\begin_layout Standard
"Forest of GP trees" 
\end_layout

\begin_layout Standard
Each tree corresponding to one of the events that a robot listens for.
 
\end_layout

\begin_layout Subsection
Examples 
\end_layout

\begin_layout Standard
An additional tree will be generated for the main loop and the initialization
 step.
 Each event handler has different information available to it.
 Therefore, the programs that are built for each handler have different
 grammars.
 The operators will be the set of methods that a Robocode robot has.
 We might introduce some macro-operations...
 
\end_layout

\begin_layout Subsection

\change_deleted 0 1161318769
Functions 
\change_inserted 0 1161318769
Non-terminals
\change_unchanged

\end_layout

\begin_layout Enumerate
turnRight
\end_layout

\begin_layout Enumerate
turnLeft
\end_layout

\begin_layout Enumerate
forward
\end_layout

\begin_layout Enumerate
backward
\end_layout

\begin_layout Enumerate
doneMoving
\end_layout

\begin_layout Enumerate
turnRadarRight
\end_layout

\begin_layout Enumerate
turnRadarLeft
\end_layout

\begin_layout Enumerate
doneRotatingRadar
\end_layout

\begin_layout Enumerate
turnGunRight
\end_layout

\begin_layout Enumerate
turnGunLeft
\end_layout

\begin_layout Enumerate
centerGun
\end_layout

\begin_layout Enumerate
doneRotatingGun
\end_layout

\begin_layout Enumerate
findEnemy
\end_layout

\begin_layout Enumerate
lookAtEnemy
\end_layout

\begin_layout Enumerate
trackEnemy
\end_layout

\begin_layout Enumerate
fire 
\end_layout

\begin_layout Standard
Require a Strongly-typed tree.
 
\end_layout

\begin_layout Standard
Generating and executing the trees.
 
\end_layout

\begin_layout Standard
Perfectly valid that a robot fight itself.
 
\end_layout

\begin_layout Standard
Selection 
\end_layout

\begin_layout Standard
Cross-over 
\end_layout

\begin_layout Standard
Mutation.
 Probably is a valid operator since it is unlikely that all valid operations
 will exist in the initial population.
 Will likely consist of random selection of an operator in the tree and
 swapping it with a randomly selected type-compatible operator 
\end_layout

\begin_layout Subsection
Execution environment 
\end_layout

\begin_layout Standard
The battles can be fought in parallel and the results accumulated to enable
 the next round of selection and reproduction.
 Robocode will be slightly modified to enable it to consume battle specification
s from a JavaSpace.
 The results of the battle will then be posted back to the space.
 This will enable us to use multiple computers fight the battles and evalute
 the fitness.
 If time permits, a control test will be run without...
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
We plan to collect the following results.
 
\end_layout

\begin_layout Standard
\begin_inset LatexCommand \bibtex[plain]{refs}

\end_inset


\end_layout

\end_body
\end_document
