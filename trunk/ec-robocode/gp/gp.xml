<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="gp" default="all">


    <property file="gp.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
   <property name="skip.tests" value="true"/>
    -->

    <!-- Compiler options -->

    <property environment="env"/>
    <property name="gp.home" value="${env.GP_HOME}"/>
    <property name="build.dir" value="${gp.home}/build"/>
    <property name="lib.dir" value="${gp.home}/gp/lib"/>
    <property name="jini.dir" value="${gp.home}/gp/lib/jini"/>
    <property name="rio.dir" value="${gp.home}/gp/lib/rio"/>


    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
    </patternset>

    <!-- JDK definitions -->
    <path id="jdk.classpath.1.5_(1)">
        <fileset dir="${jdk.home.1.5_(1)}">
            <include name="jre/lib/charsets.jar"/>
            <include name="jre/lib/jce.jar"/>
            <include name="jre/lib/jsse.jar"/>
            <include name="jre/lib/rt.jar"/>
            <include name="jre/lib/ext/dnsns.jar"/>
            <include name="jre/lib/ext/localedata.jar"/>
            <include name="jre/lib/ext/sunjce_provider.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${jdk.home.1.5_(1)}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.5_(1)"/>


    <!-- Project Libraries -->

    <path id="library.junit-4.1.classpath">
        <pathelement location="${basedir}/lib/junit-4.1.jar"/>
    </path>

    <path id="library.functionalj-0.8-jdk15.classpath">
        <pathelement location="${basedir}/lib/functionalj-0.8-jdk15.jar"/>
    </path>

    <path id="library.jscience.classpath">
        <pathelement location="${basedir}/lib/jscience.jar"/>
    </path>

    <!-- Modules -->


    <!-- Module rc -->

    <dirname property="module.rc.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.rc" value="${project.jdk.home}"/>
    <property name="module.jdk.classpath.rc" value="${project.jdk.classpath}"/>

    <property name="compiler.args.rc" value="${compiler.args}"/>

    <property name="rc.output.dir" value="${module.rc.basedir}/rc/classes"/>
    <property name="rc.testoutput.dir" value="${module.rc.basedir}/rc/classes"/>

    <path id="rc.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="rc.module.classpath">
        <path refid="${module.jdk.classpath.rc}"/>
        <pathelement location="${module.rc.basedir}/lib/jini/jsk-policy.jar"/>
        <pathelement location="${module.rc.basedir}/lib/jini/jsk-dl.jar"/>
        <pathelement location="${module.rc.basedir}/lib/jini/jsk-resources.jar"/>
        <pathelement location="${module.rc.basedir}/lib/jini/jsk-platform.jar"/>
        <pathelement location="${module.rc.basedir}/lib/jini/jsk-lib.jar"/>
        <pathelement location="${module.rc.basedir}/lib/rio/rio.jar"/>
    </path>


    <patternset id="excluded.from.module.rc">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.rc">
        <patternset refid="excluded.from.module.rc"/>
    </patternset>

    <path id="rc.module.sourcepath">
        <dirset dir="${module.rc.basedir}/../rc">
            <include name="robocode"/>
            <include name="robots"/>
        </dirset>
    </path>


    <target name="compile.module.rc" depends="compile.module.rc.production,compile.module.rc.tests"
            description="Compile module rc"/>

    <target name="compile.module.rc.production" description="Compile module rc; production classes">
        <mkdir dir="${rc.output.dir}"/>
        <javac destdir="${rc.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memoryMaximumSize="${compiler.max.memory}" fork="true" executable="${module.jdk.home.rc}/bin/javac">
            <compilerarg line="${compiler.args.rc}"/>
            <bootclasspath refid="rc.module.bootclasspath"/>
            <classpath refid="rc.module.classpath"/>
            <src refid="rc.module.sourcepath"/>
        </javac>

        <copy todir="${rc.output.dir}">
            <fileset dir="${module.rc.basedir}/../rc/robocode">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
            <fileset dir="${module.rc.basedir}/../rc/robots">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.rc.tests" depends="compile.module.rc.production"
            description="compile module rc; test classes" unless="skip.tests"/>

    <target name="clean.module.rc" description="cleanup module">
        <delete dir="${rc.output.dir}"/>
        <delete dir="${rc.testoutput.dir}"/>
    </target>


    <!-- Module gp -->

    <dirname property="module.gp.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.gp" value="${project.jdk.home}"/>
    <property name="module.jdk.classpath.gp" value="${project.jdk.classpath}"/>

    <property name="compiler.args.gp" value="${compiler.args}"/>

    <property name="gp.output.dir" value="${module.gp.basedir}/build/classes"/>
    <property name="gp.testoutput.dir" value="${module.gp.basedir}/build/classes"/>

    <path id="gp.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="gp.module.classpath">
        <path refid="${module.jdk.classpath.gp}"/>
        <path refid="library.junit-4.1.classpath"/>
        <path refid="library.functionalj-0.8-jdk15.classpath"/>
        <path refid="library.jscience.classpath"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-platform.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-dl.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-lib.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-debug-policy.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-resources.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-policy.jar"/>
        <pathelement location="${module.gp.basedir}/lib/rio/rio.jar"/>
        <pathelement location="${rc.output.dir}"/>
    </path>


    <patternset id="excluded.from.module.gp">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.gp">
        <patternset refid="excluded.from.module.gp"/>
    </patternset>

    <path id="gp.module.sourcepath">
        <dirset dir="${module.gp.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="gp.module.test.sourcepath">
        <dirset dir="${module.gp.basedir}">
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile.module.gp" depends="compile.module.gp.production,compile.module.gp.tests"
            description="Compile module gp"/>

    <target name="compile.module.gp.production" depends="compile.module.rc"
            description="Compile module gp; production classes">
        <mkdir dir="${gp.output.dir}"/>
        <javac destdir="${gp.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memoryMaximumSize="${compiler.max.memory}" fork="true" executable="${module.jdk.home.gp}/bin/javac">
            <compilerarg line="${compiler.args.gp}"/>
            <bootclasspath refid="gp.module.bootclasspath"/>
            <classpath refid="gp.module.classpath"/>
            <src refid="gp.module.sourcepath"/>
        </javac>

        <copy todir="${gp.output.dir}">
            <fileset dir="${module.gp.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.gp.tests" depends="compile.module.gp.production"
            description="compile module gp; test classes" unless="skip.tests">
        <mkdir dir="${gp.testoutput.dir}"/>
        <javac destdir="${gp.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memoryMaximumSize="${compiler.max.memory}" fork="true" executable="${module.jdk.home.gp}/bin/javac">
            <compilerarg line="${compiler.args.gp}"/>
            <classpath refid="gp.module.classpath"/>
            <classpath location="${gp.output.dir}"/>
            <src refid="gp.module.test.sourcepath"/>
        </javac>

        <copy todir="${gp.testoutput.dir}">
            <fileset dir="${module.gp.basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.gp" description="cleanup module">
        <delete dir="${gp.output.dir}"/>
        <delete dir="${gp.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
        <mkdir dir="${build.dir}"/>                
    </target>

    <target name="jar.gp" depends="compile.module.gp">
        <jar destfile="${build.dir}/gp.jar">
            <fileset dir="${gp.output.dir}">
                <include name="**/*"/>
            </fileset>
        </jar>
    </target>

    <target name="jar.rc" depends="compile.module.rc">
        <jar destfile="${build.dir}/gp.jar">
            <fileset dir="${rc.output.dir}">
                <include name="**/*"/>
            </fileset>
        </jar>
    </target>

    <target name="make_jars" depends="jar.rc, jar.gp"/>

    <target name="copy_libs">
        <copy todir="${build.dir}">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <copy todir="${build.dir}">
            <fileset dir="${jini.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <copy todir="${build.dir}">
            <fileset dir="${rio.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="clean" depends="clean.module.rc, clean.module.gp" description="cleanup all"/>

    <target name="all" depends="init, clean, compile.module.rc, compile.module.gp, make_jars, copy_libs" description="build all"/>
</project>