#LyX 1.4.3 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\begin_preamble
\author{Ronald Bowers \& Jason Owens}
\title{Coevolution of Human-Competitive Robocode Tanks Using Genetic Programming with Exogenous Fitness}
\end_preamble
\language english
\inputencoding auto
\fontscheme ae
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 2
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes true
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
maketitle
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
We propose to perform an experiment to evolve software agents that are able
 to successfully compete against human-coded agents in Robocode matches.
 To achieve this, we propose to use genetic programming and coevolution.
 Previous research has explored the topics of coevolution, genetic programming
 and Robocode agents thoroughly.
 However, to date no one has successfully evolved competitive Robocode agents
 using coevolution.
 Previous attempts have resulted only in the mediocre stable state.
 To coax the agents to avoid a mediocre stable state, we propose to use
 an exogenous fitness function.
 We hypothesize that we will be able to evolve agents that will be competitive
 against non-trivial, human-coded Robocode agents.
\end_layout

\begin_layout Section
Introduction 
\end_layout

\begin_layout Standard
One of the most intriquing ideas in AI is that is that of learning through
 self-play.
 Self-play, or 
\begin_inset Quotes eld
\end_inset

introspection
\begin_inset Quotes erd
\end_inset

 is the idea that a machine learning program can come to master some domain
 by repeatedly competing against itself and gradually improving
\begin_inset LatexCommand \cite{pollack97coevolution}

\end_inset

.
 Most efforts have been unsuccessful, however some, most notably Tesauro's
 TD-Gammon have succeeded greatly.
 The essential problem with self-play has been that the programs that develop
 tend to be brittle.
 They cannot compete when then opposition is changed.
\end_layout

\begin_layout Standard
Within the evolutionary computation parardigm, the coevolutionary approach
 provides a means to develop successful programs through self-play.
 More precisely, play against other individuals who are also trying to improve.
 Traditional self-play can be likened to the old man in the park playing
 both sides of a chess board.
 A coevolutionary approach is more like a chess club in which all start
 as novices and, through competition with each other, gradually learn to
 become masters.
\end_layout

\begin_layout Standard
Note that there is disagreement in the literature as to the definition of
 coevolution in the context of evolutionary computation.
 In a biological sense, coevolution means two separate species evolving
 together, e.g.
 flowers and bees.
 Many in the EC community hold to the multiple-population concept 
\begin_inset LatexCommand \cite{Floreano:1999dq,koza1991eac}

\end_inset

, and refer to a self-competing population as a competitive fitness environment
 
\begin_inset LatexCommand \cite{angeline93competitive}

\end_inset

.
 Others in the field insist that it is valid to refer to a self-competing
 single population as coevolutionary since each individual is evolving against
 another evolving population, where the other population is the set of all
 other members 
\begin_inset LatexCommand \cite{Luke:2002fk}

\end_inset

.
 Following Luke, we have chosen to use the term coevolution even though
 we will have only one population of robots.
\end_layout

\begin_layout Standard
The advantage coevolution provides is that because the members are competing
 against each other, the fitness landscape is not static.
 Rather it evolves along with the population.
 A goal in coevolutionary systems is for the members to evolve in a such
 a way that an 
\begin_inset Quotes eld
\end_inset

arms race
\begin_inset Quotes erd
\end_inset

 develops.
 An arms race is when the members begin to develop ways to counter the oppositio
n's strengths and exploit their vulnerabilities.
\end_layout

\begin_layout Standard
Although coevolution appears to be a useful way of evolving game-playing
 agents.
 Historically, it has not often been successful in games where there is
 a cost or risk in taking action.
 Thus, the problem of the "mediocre stable state
\begin_inset Foot
status collapsed

\begin_layout Standard
The "mediocre stable state" is a state where the population consists of
 members who do absolutely nothing.
 This phenemonen occurs because every action away from the initial condition
 incurs a cost.
 Thus, the starting state it is a local optima for all contestants.
\end_layout

\end_inset

" 
\begin_inset LatexCommand \cite{ficici98challenges,waters1999gpa,Shichel:2005eu}

\end_inset

.The mediocre stable state has consistently hindered the use of coevolution
 in the development of combat game playing agents.
 One approach to avoiding the mediocre stable state is through the use of
 an exogenous fitness function
\begin_inset LatexCommand \cite{waters1999gpa}

\end_inset

.
 In our experiment we hope to develop an exogenous fitness function that
 can avoid the mediocre stable state and inspire evolution.
\end_layout

\begin_layout Standard
For our game environment, we have chosen Robocode.Robocode is a Java-based
 robot battle simulator.
 It provides a framework in which two or more software agents, representing
 robotic tanks, can fight to the death.
 Scoring is provided and is based on the robot's energy level.
 Moving, shooting, and getting shot by an enemy cost energy.
 Successfully hitting an enemy returns some energy.
 A typical Robocode match consists of ten battles, with the contestants
 starting a random positions.
 The Robocode distribution comes with a set of relatively simple robots.
 More advanced robots are available online.
 There is also a tournament system that allows developers to compete against
 other robots that have been submitted.
\end_layout

\begin_layout Standard
In order to provide the most flexible evolutionary mechanism, and because
 it is the approach we find most interesting, we have chosen to use genetic
 programming to evolve the robot logic.
 Unlike most GP efforts, we will not be using LISP.
 Rather, we intend to use a strongly-typed GP
\begin_inset LatexCommand \cite{montana93strongly}

\end_inset

 approach implemented in Java.
 This choice is based in no small part on our familiarity with Java, and
 the fact that Robocode is a Java environment.
\end_layout

\begin_layout Standard
We hypothesize that using genetic programming and coevolution and by applying
 an exogenous fitness function we can evolve Robocode players that can compete
 successfully against the best human-designed robots.
 
\end_layout

\begin_layout Section
Problem and Hypothesis
\end_layout

\begin_layout Standard
Express problem.
 We hypothesize that using GP and coevolution, and by applying an exogenous
 fitness function, we can evolve Robocode players that can compete successfully
 against the best human-designed robots.
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Subsection
Coevolution
\end_layout

\begin_layout Standard
In general, coevolution refers to an evolutionary process that includes
 two or more populations 
\begin_inset LatexCommand \cite{koza1991eac}

\end_inset

.
 When determining the fitness of a member in one population, the environment
 includes the members of the other population(s).
 In EC, there are single population coevolution strategies
\end_layout

\begin_layout Standard
Coevolution appears to be
\end_layout

\begin_layout Standard
In 
\begin_inset LatexCommand \cite{angeline93competitive}

\end_inset

, Angeline and Pollock argue that competitive fitness functions are more
 effective than independent fitness functions.
 A competitive fitness function is considered to be any calculation of fitness
 that is dependent on the current state of the population, rather than relative
 to a global optimum.
 Generally, competitive fitness is measured through competition between
 population members.
 These competitions can range from testing each member against each other
 to a carefully structured tournament 
\begin_inset LatexCommand \cite{angeline93competitive}

\end_inset

.
 
\end_layout

\begin_layout Standard
In 
\begin_inset LatexCommand \cite{angeline93competitive}

\end_inset

, Angeline and Pollock argue that competitive fitness functions are more
 effective than independent fitness functions.
 A competitive fitness function is considered to be any calculation of fitness
 that is dependent on the current state of the population, rather than relative
 to a global optimum.
 Generally, competitive fitness is measured through competition between
 population members.
 These competitions can range from testing each member against each other
 to a carefully structured tournament 
\begin_inset LatexCommand \cite{angeline93competitive}

\end_inset

.
 
\end_layout

\begin_layout Standard
Floreano, Nolfi and Mondada 
\begin_inset LatexCommand \cite{Floreano:1999dq}

\end_inset

 found that competive coevolution can generate efficient chasing and escaping
 strategies in a predator/prey environment.
 They also found that this capability evolved even more quickly than "simple"
 wall avoidance They postulate that competitive coevolution generates solutions
 to difficult problems by generating a series of challenges of increasing
 difficulty.
\end_layout

\begin_layout Standard
Unfortunately, there are several potential drawbacks to a coevolutionary
 approach.
 The most frequently cited drawback is the learned phenomenon called a 
\begin_inset Quotes eld
\end_inset

mediocre stable state.
\begin_inset Quotes erd
\end_inset

 The mediocre stable state arises when neither 
\end_layout

\begin_layout Standard
Must maintain balance in the arms race, otherwise one challenger will be
 unable to offer continued opposition.
 The environment should netirher be too difficult nor too easy.
 The population members must be stressed to improve, but not so overwhelmed
 that they fail constantly.
 They found the open-ended coevolution is not necessarily synomous with
 a purely competive framework.
 They found it necessary to provide a mixture of competitive and cooperative
 pressures in order to avoid the mss
\begin_inset LatexCommand \cite{ficici98challenges}

\end_inset

.
\end_layout

\begin_layout Standard
There exist some approaches to try to avoid the MeSS.
\end_layout

\begin_layout Subsection
Genetic Programming
\end_layout

\begin_layout Standard
Automatic Programming of Robots using Genetic Programming
\end_layout

\begin_layout Standard
In 
\begin_inset LatexCommand \cite{Koza:1992bh}

\end_inset

Koza and Rice lay out he fundamental approach to genetic programming.
 1.
 Generate an initial population of random composistion, i.e.
 programs.
 2.
 Iterate until complete a.
 execute each program b.
 create a new population via reproduction and crossover.
\end_layout

\begin_layout Subsection
Robocode-based Investigations
\end_layout

\begin_layout Standard
There have been several projects which have attempted to evolve robocode
 combatants.
 
\begin_inset LatexCommand \cite{Eisenstein:2003wd,Hong:2004rr,Shichel:2005eu}

\end_inset

.
 Each of these efforts have used a different control architecture, and none
 has successfully used coevolution.
\end_layout

\begin_layout Standard
Eisenstein 
\begin_inset LatexCommand \cite{Eisenstein:2003wd}

\end_inset

 built his Robocode tank using a subsumption architecture that was evolved
 using a GA.
 Coevolution was attempted, but failed to produce any progress towards competiti
ve robots.
 Indeed, he says 
\begin_inset Quotes eld
\end_inset

after several generations, I found the population rife with catatonics.
\begin_inset Quotes erd
\end_inset

 The experiment proceeded using the standard Robocode robots plus one high-perfo
rmance robot as the opposition.
 Eisenstein also explicitly points out that targeting behaviors were very
 hard to evolve.
 
\end_layout

\begin_layout Standard
The robots were evolved in four, increasingly complex, environments.
\end_layout

\begin_layout Itemize
Single adversary, single starting position
\end_layout

\begin_layout Itemize
Single adversary, multiple starting positions
\end_layout

\begin_layout Itemize
Multiple adversaries
\begin_inset Foot
status collapsed

\begin_layout Standard
Multiple adversaries means that a combination of pre-defined tanks were
 faught.
 Combat was still one-on-one.
\end_layout

\end_inset

, single starting position
\end_layout

\begin_layout Itemize
Multiple adversaries, multiple starting positions
\end_layout

\begin_layout Standard
For the single adversary, single starting position case, robots that could
 reliably defeat their opposition evolved quickly.
 However, as the complexity of the environment increased, success became
 less common.
 Hindering the process was the fact that the more complex simulations took
 much longer to run.
\end_layout

\begin_layout Standard
In 
\begin_inset LatexCommand \cite{Hong:2004rr}

\end_inset

, Hong and Cho used a GA that consisted of six chromosomes, each of which
 had six genes.
 The chromosomes were related to the behavior that the tank would exhibit
 in the main loop and in five of the event handlers.
 Each gene corresponded to a specific action-type of the tank, for eample
 
\emph on
\noun on
move
\emph default
\noun default
 and 
\emph on
\noun on
shoot
\emph default
\noun default
.
 For each action, two or more hand-coded strategies were developed.
 They were able to evolve tanks that could compete successfully against
 three of the basic tanks, but they had little success in defeating a more
 advanced tank.
\end_layout

\begin_layout Standard
A third experiment was performed by Shichel, Ziserman, and Sipper
\begin_inset LatexCommand \cite{Shichel:2005eu}

\end_inset

.They chose to limit their investigation to a particular class of Robocode
 robot, the 
\noun on
Haiku bot
\noun default
.
 The Haiku bot is limited to four lines of custom code, where the number
 of lines is the number of semicolons.
 After investigating and rejecting Strongly Typed Genetic Programming and
 Automatically Defined Functions, they chose a Koza-style LISP implementation.
 This had the extra benefit of allowing complex expressions since the the
 Haiku bot class places no limit on the number of parentheses.
 After completing the evolution process, the highest performing robot was
 entered into the Robocode Haiku Bot tournamemt.
 Remarkably, it finished third out of 27 contestants.
 
\end_layout

\begin_layout Standard
Shichel, Ziserman, and Sipper also investigated coevolution, but found that
 the coevolved robots showed primitive behavior and were easily defeated
 by human-coded robots.
 To overcome the medioce steady state that arose rapidly in Eisenstein's
 work, they propose to bootstrap the evolutionary process with competition
 against human-coded robots.
 After a few generations in this configuration, they would switch to a coevoluti
onary approach.
 
\end_layout

\begin_layout Section
Approach
\end_layout

\begin_layout Standard
Ignoring the warnings of others, we plan to carry through and explore the
 experiment using genetic programming and coevolution in this rather 
\begin_inset Quotes eld
\end_inset

open-ended
\begin_inset Quotes erd
\end_inset

 domain.
 Previous research in evolving Robocode agents reported failure when pursuing
 a coevolutionary model, and thus they resorted to training against known
 quantities 
\begin_inset LatexCommand \cite{Eisenstein:2003wd,Shichel:2005eu}

\end_inset

.
 However, in doing this, the danger of evolving specialized players unable
 to handle generalized situations (i.e.
 new players with different tactics) is increased; in fact, [one of them
 mentions this].
 From our point of view, coevolution is obviously more exciting; we believe
 that the lack of an appropriate exogenous fitness function is the primary
 reason the previous ventures failed during coevolution.
 As 
\begin_inset LatexCommand \cite{ficici98challenges}

\end_inset

 states: 
\begin_inset Quotes eld
\end_inset

[t]he key to successful coevolutionary learning is a competitive arms race
 between opposed participants.
 Competitors must be well-matched in skill to force each other to improve.
\begin_inset Quotes erd
\end_inset

 We would like to add that competitors must also be sufficiently 
\emph on
motivated
\emph default
 in order to avoid the mediocre stable-states common to coevolution 
\begin_inset LatexCommand \cite{angeline93competitive,ficici98challenges,waters1999gpa}

\end_inset

.
\end_layout

\begin_layout Standard
As stated previously, our system is essentially open-ended, unless a member
 of the population is able to always defeat all opposition, both evolved
 and human-designed.
 Since this is not likely, the experiment will be terminated after some
 number of generations.
 The exact number will depend on our processing speed.
\end_layout

\begin_layout Standard
Although Koza generally dismisses the need for mutation in GP, we believe
 that it is necessary to access some parts of the solution space.
 Consider an operator that takes a value, such as turnRight(degrees).
 The amount to turn is specified as an argument.
 Crossover and reproduction cannot explore how far to turn unless all parameter
 values are represented in the initial population.
 It is more practical to allow mutation of such parameters.
 
\end_layout

\begin_layout Subsection
Game Description
\end_layout

\begin_layout Standard
From the SourceForge project page: 
\end_layout

\begin_layout Quote
Robocode is a Java based programming game, where the goal is to develop
 robot battle tanks to battle against competitor tanks.
 The motto of Robocode is: Build the best, destroy the rest! 
\end_layout

\begin_layout Standard
Eisenstein describes the Robocode environment as a mixture of realism and
 fantasy 
\begin_inset LatexCommand \cite{Eisenstein:2003wd}

\end_inset

: it's a simulation, so there are complex time-dependent relationships between
 actions and effects, but it's also a relatively 
\emph on
simple
\emph default
 simulation with 
\begin_inset Quotes eld
\end_inset

advanced
\begin_inset Quotes erd
\end_inset

 sensors, no noise, and a flat, finite, two dimensional world.
\end_layout

\begin_layout Standard
Each robot executes in its own thread and is event driven.
 The Robocode system synchronizes robot actions and sends messages to a
 robot when various events occur.
 These events include:
\end_layout

\begin_layout Description
ScannedRobot detecting an enemy tank
\end_layout

\begin_layout Description
HitByBullet getting hit by a bullet
\end_layout

\begin_layout Description
WallCollision running into a wall 
\end_layout

\begin_layout Description
RobotCollision running into another robot 
\end_layout

\begin_layout Description
BulletHit hitting another robot with your bullet 
\end_layout

\begin_layout Description
BulletMiss missing any robot with your bullet
\end_layout

\begin_layout Standard
A robot responds to an event with some combination of logic and action execution.
 Any actions are enqueued and subsequently take some time to execute.
 If another event occurs before the first set of actions is completed, the
 actions inspired by the second event are layered on top of the previous
 set and they execute together.
 This interaction between actions, events and the executed response of the
 robot makes designing Robocode robots by hand difficult.
\end_layout

\begin_layout Subsection
Representation
\end_layout

\begin_layout Standard
The genome for an individual in the population consists of a forest of programs.
 There are a total of 7 trees: one tree for the base behavior, and one tree
 for each of the six events described above.
 We will perform some initial testing to determine the best maximum depth
 for each tree in the forest [how to test??].
 Each executable tree is recursively constructed of functions (or non-terminals,
 as we prefer) of various arity, and non-terminals with 0 arity.
 The nodes (both terminals and non-terminals) are strongly typed, after
 an adaptation of 
\begin_inset LatexCommand \cite{montana93strongly}

\end_inset

.
 Only nodes that return the correct type can be used as a parameter to a
 non-terminal accepting a specific type.
 This complicates the operators somewhat and will be discussed in section\InsetSpace ~

\begin_inset LatexCommand \ref{sub:Operators}

\end_inset

.
 Each tree root will be a
\series bold
 seq
\series default
 (sequence) node, since it is the only node with a return type of void.
 One of the many differences between this domain and other GP domains is
 that robots primarily rely on the side effects of the trees, as opposed
 to their single output value.
 Therefore, no tree requires a return value.
 However, the sequence node also provides the useful capability of representing
 a sequence of subtree executions.
 On creation, it will randomly choose to allocate 1--5 [why 1 through 5?]
 sequence 
\begin_inset Quotes eld
\end_inset

slots.
\begin_inset Quotes erd
\end_inset

 The mutation operator is the only operator capable of changing this number
 after creation.
\end_layout

\begin_layout Standard
Section\InsetSpace ~

\begin_inset LatexCommand \ref{sub:Terminals-and-Non-terminals}

\end_inset

 lists the terminals and non-terminals available for the different tree
 types.
 Tables 
\begin_inset LatexCommand \ref{sub:Terminals-and-Non-terminals}

\end_inset

--
\begin_inset LatexCommand \ref{tab:Bullet-Miss-node}

\end_inset

 list the domain specific nodes for each event tree.
 Symbols present in the tables indicate the argument types and return types:
 
\begin_inset Formula $\theta$
\end_inset

 is an angle in radians, 
\begin_inset Formula $\Delta$
\end_inset

 is a distance, 
\begin_inset Formula $\epsilon$
\end_inset

 is an energy level, 
\begin_inset Formula $\beta$
\end_inset

 is a boolean value, and 
\begin_inset Formula $\tau$
\end_inset

 is a generic type.
 
\end_layout

\begin_layout Standard
In addition to the domain-specific nodes, there are a few 
\begin_inset Quotes eld
\end_inset

standards
\begin_inset Quotes erd
\end_inset

 that we include as well, described in Table\InsetSpace ~

\begin_inset LatexCommand \ref{tab:Standard-non-terminals}

\end_inset

.
 All of the number-related nodes are generic: i.e.
 they can operate on any pair of numeric types (i.e.
 angle, distance, energy level).
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Returns
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
add 
\begin_inset Formula $\tau$
\end_inset

 
\begin_inset Formula $\tau$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\tau$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
sub 
\begin_inset Formula $\tau$
\end_inset

 
\begin_inset Formula $\tau$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\tau$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
mult 
\begin_inset Formula $\tau$
\end_inset

 
\begin_inset Formula $\tau$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\tau$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
div 
\begin_inset Formula $\tau$
\end_inset

 
\begin_inset Formula $\tau$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\tau$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\tau<\tau$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\beta$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\tau>\tau$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\beta$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\beta\wedge\beta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\beta$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\beta\vee\beta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\beta$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\neg\beta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\beta$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
if-then-else 
\begin_inset Formula $\beta$
\end_inset

 
\begin_inset Formula $\tau_{1}$
\end_inset

 
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\tau_{1}$
\end_inset

 if 
\begin_inset Formula $\beta=T$
\end_inset

 else 
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Standard-non-terminals}

\end_inset

Standard non-terminals
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Operators}

\end_inset

Operators
\end_layout

\begin_layout Standard
Generating and executing the trees.
 
\end_layout

\begin_layout Standard
Selection 
\end_layout

\begin_layout Standard
Cross-over 
\end_layout

\begin_layout Standard
Mutation.
 Probably is a valid operator since it is unlikely that all valid operations
 will exist in the initial population.
 Will likely consist of random selection of an operator in the tree and
 swapping it with a randomly selected type-compatible operator 
\end_layout

\begin_layout Subsection
Evaluation
\end_layout

\begin_layout Standard
Perfectly valid that a robot fight itself.
 
\end_layout

\begin_layout Subsection
GP Configuration
\end_layout

\begin_layout Standard
Our implementation of coevolution follows that of the model described in
 
\begin_inset LatexCommand \cite{Luke:2002fk}

\end_inset

: one-population coevolution, where single individuals within that population
 are paired up and pitted against every other individual to obtain an overall
 fitness value.
\end_layout

\begin_layout Subsection
Examples 
\end_layout

\begin_layout Standard
An additional tree will be generated for the main loop and the initialization
 step.
 Each event handler has different information available to it.
 Therefore, the programs that are built for each handler have different
 grammars.
 The operators will be the set of methods that a Robocode robot has.
 We might introduce some macro-operations...
 
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Terminals-and-Non-terminals}

\end_inset

Terminals and Non-terminals
\end_layout

\begin_layout Standard
To account for the forest of trees approach, we have created a basic set
 of nodes (terminals and non-terminals) and a specialized superset for each
 event.
 The basic nodes are listed in Table\InsetSpace ~

\begin_inset LatexCommand \ref{tab:Basic-omnipresent-terminals}

\end_inset

.
 Nodes 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide true
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="21" columns="3">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="40page%">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Returns
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
turnRight 
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
void
\end_layout

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rotates the entire robot to the right by the specified angle.
\end_layout

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
turnLeft 
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rotates the entire robot to the left by the specified angle.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
forward 
\begin_inset Formula $\Delta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Moves the entire robot forward in the current direction.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
backward 
\begin_inset Formula $\Delta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Moves the entire robot backward in the current direction.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
isDoneMoving
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\beta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses whether previously specified movements are complete.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
turnRadarRight 
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rotates the radar unit to the right by the specified angle.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
turnRadarLeft 
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rotates the radar unit to the left by the specified angle.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
centerRadar
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rotates the radar unit to align it with the gun turret.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ifDoneRotatingRadar 
\begin_inset Formula $\tau_{1}$
\end_inset

 
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
result of 
\begin_inset Formula $\tau$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Allows further execution to be dependent on whether previously specified
 radar movements are complete.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
turnGunRight 
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rotates the gun turret to the right by the specified angle.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
turnGunLeft 
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rotates the gun turret to the left by the specified angle.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
centerGun
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rotates the gun turret to align it with the body.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ifDoneRotatingGun 
\begin_inset Formula $\tau_{1}$
\end_inset

 
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
result of 
\begin_inset Formula $\tau$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Allows further execution to be dependent on whether previously specified
 gun turret movements are complete.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
fireWeak
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\epsilon$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fires a weak bullet, and returns the remaining energy level.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
fireMedium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\epsilon$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fires a medium bullet, and returns the remaining energy level.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
fireStrong
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\epsilon$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fires a strong bullet, and returns the remaining energy level.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
energyLevel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\epsilon$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the agent's remaining energy.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
seq 
\begin_inset Formula $\tau_{0}$
\end_inset

 
\begin_inset Formula $\tau_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
void
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Execute a sequence of instructions.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
distanceToWall
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\Delta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the distance to the wall in the direction the tracks are pointing.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
gunHeat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the heat of the gun, can't fire unless 
\begin_inset Formula $\lambda=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Basic-omnipresent-terminals}

\end_inset

Basic omnipresent terminals and non-terminals
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide true
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Returns
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
enemyBearing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses an angle to the enemy relative to the robot's current heading.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
enemyDistance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\Delta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the distance to the enemy (center to center).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
enemyEnergy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\epsilon$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the energy level of the enemy.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
enemyHeading
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the direction the enemy is facing.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Scanned-Robot-node}

\end_inset

Scanned Robot node set
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide true
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Returns
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
bulletBearing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the direction from whence the bullet came
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
bulletEnergy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\epsilon$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the energy this bullet was fired with (and thus the damage it did)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
bulletVelocity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\omega$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses how fast the bullet was flying
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Hit-By-Bullet}

\end_inset

Hit By Bullet node set
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide true
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="3">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Returns
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
wallBearing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the angle to the wall, relative to the robot's heading
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Wall-Collision-node}

\end_inset

Wall Collision node set
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide true
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="40page%">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Returns
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
enemyBearing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the angle to the enemy it collided with, relative to the robot's
 heading
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
enemyEnergy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\epsilon$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the enemy's energy level
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ifMyFault 
\begin_inset Formula $\tau_{1}$
\end_inset

 
\begin_inset Formula $\tau_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
result of 
\begin_inset Formula $\tau$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Allows further execution to be dependent on whether the robot or enemy was
 at fault
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Robot-Collision-node}

\end_inset

Robot Collision node set
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide true
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="3">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Returns
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
enemyEnergy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\epsilon$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the enemy's energy level
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Bullet-Hit-node}

\end_inset

Bullet Hit node set
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide true
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Returns
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
bulletHeading
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Formula $\theta$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Senses the bullet's absolute direction in degrees
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Bullet-Miss-node}

\end_inset

Bullet Miss node set
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Execution environment 
\end_layout

\begin_layout Standard
The battles can be fought in parallel and the results accumulated to enable
 the next round of selection and reproduction.
 Robocode will be slightly modified to enable it to consume battle specification
s from a JavaSpace.
 The results of the battle will then be posted back to the space.
 This will enable us to use multiple computers fight the battles and evaluate
 the fitness.
 If time permits, a control test will be run without...
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
We plan to collect the following results.
 
\end_layout

\begin_layout Standard
\begin_inset LatexCommand \bibtex[plain]{refs}

\end_inset


\end_layout

\end_body
\end_document
