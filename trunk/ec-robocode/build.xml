<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="gp" default="all">

    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
   <property name="skip.tests" value="true"/>
    -->

    <echo message="BASEDIR: ${basedir}"/>

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
    </patternset>

    <property name="module.gp.basedir" value="${basedir}/gp"/>

    <!-- Project Libraries -->

    <path id="library.junit-4.1.classpath">
        <pathelement location="${module.gp.basedir}/lib/junit-4.1.jar"/>
    </path>

    <path id="library.jscience.classpath">
        <pathelement location="${module.gp.basedir}/lib/jscience.jar"/>
    </path>

    <!-- Modules -->


    <!-- Module rc -->

    <property name="module.rc.basedir" value="${basedir}/rc"/>


    <property name="compiler.args.rc" value="${compiler.args}"/>

    <property name="rc.output.dir" value="${module.rc.basedir}/classes"/>
    <property name="rc.testoutput.dir" value="${module.rc.basedir}/classes"/>

    <path id="rc.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="rc.module.classpath">
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-policy.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-dl.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-resources.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-platform.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-lib.jar"/>
        <pathelement location="${module.gp.basedir}/lib/rio/rio.jar"/>
    </path>


    <patternset id="excluded.from.module.rc">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.rc">
        <patternset refid="excluded.from.module.rc"/>
    </patternset>

    <path id="rc.module.sourcepath">
        <dirset dir="${module.rc.basedir}">
            <include name="robocode"/>
            <include name="robots"/>
        </dirset>
    </path>


    <target name="compile.module.rc" depends="compile.module.rc.production,compile.module.rc.tests"
            description="Compile module rc"/>

    <target name="compile.module.rc.production" description="Compile module rc; production classes">
        <mkdir dir="${rc.output.dir}"/>
        <javac destdir="${rc.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.rc}"/>
            <bootclasspath refid="rc.module.bootclasspath"/>
            <classpath refid="rc.module.classpath"/>
            <src refid="rc.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.rc"/>
        </javac>

        <copy todir="${rc.output.dir}">
            <fileset dir="${module.rc.basedir}/../rc/robocode">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
            <fileset dir="${module.rc.basedir}/../rc/robots">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.rc.tests" depends="compile.module.rc.production"
            description="compile module rc; test classes" unless="skip.tests"/>

    <target name="clean.module.rc" description="cleanup module">
        <delete dir="${rc.output.dir}"/>
        <delete dir="${rc.testoutput.dir}"/>
    </target>


    <!--  MODULE ECJ -->

    <property name="module.ecj.basedir" value="${basedir}/ecj"/>
    <property name="ecj.output.dir" value="${module.ecj.basedir}/build"/>
    <path id="ecj.module.classpath">
        <pathelement location="${module.gp.basedir}/lib/jcommon-1.0.6.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jfreechart-1.0.3-experimental.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jfreechart-1.0.3.jar"/>
        <pathelement location="${module.gp.basedir}/lib/itext-1.4.6.jar"/>
    </path>
    <path id="ecj.module.sourcepath">
        <dirset dir="${module.ecj.basedir}">
            <include name="src"/>
        </dirset>
    </path>


    <!-- Module gp -->


    <property name="compiler.args.gp" value="${compiler.args}"/>

    <property name="gp.population" value="oogabooga"/>
    <property name="gp.bot.name" value="GPAgent"/>
    <property name="gp.build.dir" value="${module.gp.basedir}/../build"/>
    <property name="gp.output.dir" value="${module.gp.basedir}/robo_build"/>
    <property name="gp.testoutput.dir" value="${module.gp.basedir}/robo_build"/>

    <path id="gp.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="gp.module.classpath">
        <path refid="library.junit-4.1.classpath"/>
        <path refid="library.jscience.classpath"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-platform.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-dl.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-lib.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-debug-policy.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-resources.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jini/jsk-policy.jar"/>
        <pathelement location="${module.gp.basedir}/lib/rio/rio.jar"/>
        <pathelement location="${rc.output.dir}"/>
        <pathelement location="${ecj.output.dir}"/>
        <pathelement location="${module.gp.basedir}/lib/javassist.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jam.micro.RaikoMicro_1.44.jar"/>
        <pathelement location="${module.gp.basedir}/lib/kc.nano.Splinter_1.1.jar"/>
        <pathelement location="${module.gp.basedir}/lib/voidious.Dookious_1.25.jar"/>
        <pathelement location="${module.gp.basedir}/lib/voidious.mini.Komarious_1.56.jar"/>
        <pathelement location="${module.gp.basedir}/lib/ahf.NanoAndrew_.4.jar"/>
        <pathelement location="${module.gp.basedir}/lib/amk.ChumbaWumba_0.3.jar"/>
        <pathelement location="${module.gp.basedir}/lib/apv.AspidMovement_1.0.jar"/>
        <pathelement location="${module.gp.basedir}/lib/axeBots.Okami_1.04.jar"/>
        <pathelement location="${module.gp.basedir}/lib/axeBots.SilverSurfer_2.53.33.jar"/>
        <pathelement location="${module.gp.basedir}/lib/bvh.fry.Freya_0.80.jar"/>
        <pathelement location="${module.gp.basedir}/lib/bvh.mini.Wodan_0.50.jar"/>
        <pathelement location="${module.gp.basedir}/lib/cf.mini.Chiva_1.0.jar"/>
        <pathelement location="${module.gp.basedir}/lib/cjk.Merkava_0.3.0.jar"/>
        <pathelement location="${module.gp.basedir}/lib/cx.micro.Smoke_0.96.jar"/>
        <pathelement location="${module.gp.basedir}/lib/cx.mini.Nimrod_0.55.jar"/>
        <pathelement location="${module.gp.basedir}/lib/cx.nano.Smog_2.6.jar"/>
        <pathelement location="${module.gp.basedir}/lib/dft.Virgin_1.25.jar"/>
        <pathelement location="${module.gp.basedir}/lib/dmp.nano.Eve_3.41.jar"/>
        <pathelement location="${module.gp.basedir}/lib/fnc.bandit.Bandit_5.2.0.jar"/>
        <pathelement location="${module.gp.basedir}/lib/gg.Wolverine_2.0_source.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jasolo.Sonda_0.55.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jep.nano.Hawkwing_0.4.1.jar"/>
        <pathelement location="${module.gp.basedir}/lib/jep.Terrible_0.4.1.jar"/>
        <pathelement location="${module.gp.basedir}/lib/kc.nano.Splinter_1.1.jar"/>
        <pathelement location="${module.gp.basedir}/lib/kcn.percept.PerceptBot_2.3.jar"/>
        <pathelement location="${module.gp.basedir}/lib/lorneswork.Predator_1.0.jar"/>
        <pathelement location="${module.gp.basedir}/lib/matt.UnderDark3_2.4.34.jar"/>
        <pathelement location="${module.gp.basedir}/lib/md.Pasta_1.1.jar"/>
        <pathelement location="${module.gp.basedir}/lib/mld.DustBunny_2.0.jar"/>
        <pathelement location="${module.gp.basedir}/lib/mue.Ascendant_1.2.20.jar"/>
        <pathelement location="${module.gp.basedir}/lib/mue.Hyperion_0.8.jar"/>
        <pathelement location="${module.gp.basedir}/lib/muf.CrazyKitten_0.9.jar"/>
        <pathelement location="${module.gp.basedir}/lib/myl.micro.Predator_1.50.jar"/>
        <pathelement location="${module.gp.basedir}/lib/mz.Movement_1.8.jar"/>
        <pathelement location="${module.gp.basedir}/lib/mz.NanoGod_2.02.jar"/>
        <pathelement location="${module.gp.basedir}/lib/pedersen.Ugluk_0.4.0.jar"/>
        <pathelement location="${module.gp.basedir}/lib/peterPark.StationaryGrumpy_1.019.31.1.jar"/>
        <pathelement location="${module.gp.basedir}/lib/pez.gloom.GloomyDark_0.9.2.jar"/>
        <pathelement location="${module.gp.basedir}/lib/pez.mako.Mako_1.5.jar"/>
        <pathelement location="${module.gp.basedir}/lib/pez.rumble.Ali_0.4.9.jar"/>
        <pathelement location="${module.gp.basedir}/lib/pi.DarkFinal.jar"/>
        <pathelement location="${module.gp.basedir}/lib/radnor.FUSiON_1.2.jar"/>
        <pathelement location="${module.gp.basedir}/lib/radnor.RamRod_1.0.jar"/>
        <pathelement location="${module.gp.basedir}/lib/rapture.Rapture_2.13.jar"/>
        <pathelement location="${module.gp.basedir}/lib/stelo.Mirror_1.1.jar"/>
        <pathelement location="${module.gp.basedir}/lib/stelo.MirrorNano_1.3.jar"/>
        <pathelement location="${module.gp.basedir}/lib/tobe.micro.Squirtle_1.5.jar"/>
        <pathelement location="${module.gp.basedir}/lib/tobe.mini.Charon_0.9.jar"/>
        <pathelement location="${module.gp.basedir}/lib/tobe.Pandora_1.2.jar"/>
        <pathelement location="${module.gp.basedir}/lib/tobe.Squirrel_toddler.jar"/>
        <pathelement location="${module.gp.basedir}/lib/tzu.TheArtOfWar_1.2TC.jar"/>
        <pathelement location="${module.gp.basedir}/lib/vuen.Fractal_0.55.jar"/>
        <pathelement location="${module.gp.basedir}/lib/whind.Wisdom_0.5.1.jar"/>
        <pathelement location="${module.gp.basedir}/lib/Evader.jar"/>
    </path>


    <patternset id="excluded.from.module.gp">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.gp">
        <patternset refid="excluded.from.module.gp"/>
    </patternset>

    <path id="gp.module.sourcepath">
        <dirset dir="${module.gp.basedir}">
            <include name="src"/>
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile.module.gp" depends="compile.module.gp.production,compile.module.gp.tests"
            description="Compile module gp"/>

    <target name="compile.module.gp.production" depends="compile.module.rc,compile.module.ecj"
            description="Compile module gp; production classes">
        <mkdir dir="${gp.output.dir}"/>
        <javac destdir="${gp.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.gp}"/>
            <bootclasspath refid="gp.module.bootclasspath"/>
            <classpath refid="gp.module.classpath"/>
            <src refid="gp.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.gp"/>
        </javac>

        <copy todir="${gp.output.dir}">
            <fileset dir="${module.gp.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
            <fileset dir="${module.gp.basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.ecj" depends="compile.module.ecj.production"
            description="Compile module ecj"/>

    <target name="compile.module.ecj.production"
            description="Compile module ecj; production classes">
        <mkdir dir="${ecj.output.dir}"/>
        <javac destdir="${ecj.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.gp}"/>
            <classpath refid="ecj.module.classpath"/>
            <src refid="ecj.module.sourcepath"/>
            <!--<patternset refid="excluded.from.compilation.gp"/>-->
        </javac>

        <copy todir="${ecj.output.dir}">
            <fileset dir="${module.ecj.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>


    <target name="compile.module.gp.tests" depends="compile.module.gp.production"
            description="compile module gp; test classes" unless="skip.tests"/>

    <target name="clean.module.gp" description="cleanup module">
        <delete dir="${gp.output.dir}"/>
        <delete dir="${gp.testoutput.dir}"/>
    </target>

    <target name="dist" depends="compile.module.rc, compile.module.gp, compile.module.ecj">
        <delete dir="${gp.build.dir}"/>
        <mkdir dir="${gp.build.dir}"/>
        <jar destfile="${gp.build.dir}/gp.jar">
            <manifest>
                <attribute name="Main-Class" value="com.imaginaryday.ec.rcpatches.GPRobocodeMain"/>
                <attribute name="Class-Path"
                           value="jsk-debug-policy.jar jsk-dl.jar jsk-lib.jar jsk-platform.jar jsk-policy.jar jsk-resources.jar rio.jar jscience.jar junit-4.1.jar jam.micro.RaikoMicro_1.44.jar kc.nano.Splinter_1.1.jar voidious.Dookious_1.25.jar voidious.mini.Komarious_1.56.jar ahf.NanoAndrew_.4.jar amk.ChumbaWumba_0.3.jar apv.AspidMovement_1.0.jar axeBots.Okami_1.04.jar axeBots.SilverSurfer_2.53.33.jar bvh.fry.Freya_0.80.jar bvh.mini.Wodan_0.50.jar cf.mini.Chiva_1.0.jar cjk.Merkava_0.3.0.jar cx.micro.Smoke_0.96.jar cx.mini.Nimrod_0.55.jar cx.nano.Smog_2.6.jar dft.Virgin_1.25.jar dmp.nano.Eve_3.41.jar Evader.jar fnc.bandit.Bandit_5.2.0.jar gg.Wolverine_2.0_source.jar gp.jar jasolo.Sonda_0.55.jar jep.nano.Hawkwing_0.4.1.jar jep.Terrible_0.4.1.jar kcn.percept.PerceptBot_2.3.jar lorneswork.Predator_1.0.jar matt.UnderDark3_2.4.34.jar md.Pasta_1.1.jar mld.DustBunny_2.0.jar mue.Ascendant_1.2.20.jar mue.Hyperion_0.8.jar muf.CrazyKitten_0.9.jar myl.micro.Predator_1.50.jar mz.Movement_1.8.jar mz.NanoGod_2.02.jar pedersen.Ugluk_0.4.0.jar peterPark.StationaryGrumpy_1.019.31.1.jar pez.gloom.GloomyDark_0.9.2.jar pez.mako.Mako_1.5.jar pez.rumble.Ali_0.4.9.jar pi.DarkFinal.jar radnor.FUSiON_1.2.jar radnor.RamRod_1.0.jar rapture.Rapture_2.13.jar rio.jar stelo.Mirror_1.1.jar stelo.MirrorNano_1.3.jar tobe.micro.Squirtle_1.5.jar tobe.mini.Charon_0.9.jar tobe.Pandora_1.2.jar tobe.Squirrel_toddler.jar tzu.TheArtOfWar_1.2TC.jar vuen.Fractal_0.55.jar whind.Wisdom_0.5.1.jar"/>
            </manifest>
            <fileset dir="${gp.output.dir}"/>
            <fileset dir="${rc.output.dir}"/>
            <fileset dir="${ecj.output.dir}"/>
        </jar>
        <copy todir="${gp.build.dir}" flatten="true">
            <fileset dir="${module.gp.basedir}/lib">
                <include name="jini/jsk-debug-policy.jar"/>
                <include name="jini/jsk-dl.jar"/>
                <include name="jini/jsk-lib.jar"/>
                <include name="jini/jsk-platform.jar"/>
                <include name="jini/jsk-policy.jar"/>
                <include name="jini/jsk-resources.jar"/>
                <include name="rio/rio.jar"/>
            </fileset>
            <fileset dir="${module.gp.basedir}/lib">
                <include name="*.jar"/>
            </fileset>
        </copy>

    </target>

    <property name="rc.test.dir" value="${module.gp.basedir}/rc_test"/>
    <target name="testagent" depends="dist">
        <mkdir dir="${rc.test.dir}"/>
        <unjar dest="${rc.test.dir}">
            <fileset dir="${module.gp.basedir}/lib">
                <include name="jscience.jar"/>
                <include name="junit-4.1.jar"/>
            </fileset>
        </unjar>
        <copy todir="${rc.test.dir}">
            <fileset dir="${gp.output.dir}">
                <include name="**/*.class"/>
            </fileset>
            <fileset dir="${rc.output.dir}">
                <include name="**/*.class"/>
            </fileset>
        </copy>
    </target>

    <target name="extract" depends="dist">
        <mkdir dir="${module.gp.basedir}/bots"/>
        <unjar dest="${module.gp.basedir}/bots">
            <fileset dir="${module.gp.basedir}/lib">
                <include name="jscience.jar"/>
                <include name="junit-4.1.jar"/>
            </fileset>
        </unjar>
        <copy todir="${module.gp.basedir}/bots">
            <fileset dir="${gp.output.dir}">
                <include name="**/*.class"/>
            </fileset>
            <fileset dir="${rc.output.dir}">
                <include name="**/*.class"/>
            </fileset>
        </copy>

        <java fork="true" dir="${module.gp.basedir}" classname="com.imaginaryday.ec.main.ExtractBots">
            <arg value="${gp.population}"/>
            <arg value="${module.gp.basedir}/bots"/>
            <arg value="${gp.bot.name}"/>
            <classpath refid="gp.module.classpath"/>
            <classpath>
                <path location="${module.gp.basedir}/bots"/>
            </classpath>
        </java>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.rc, clean.module.gp" description="cleanup all">
        <delete dir="${module.gp.basedir}/bots"/>
        <delete dir="${rc.test.dir}"/>
    </target>

    <target name="all" depends="init, clean, compile.module.rc, compile.module.gp" description="build all"/>
</project>